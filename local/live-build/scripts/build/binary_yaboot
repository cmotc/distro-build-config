#!/bin/sh

## live-build(7) - System Build Scripts
## Copyright (C) 2006-2013 Daniel Baumann <daniel@debian.org>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Including common functions
[ -e "${LIVE_BUILD}/scripts/build.sh" ] && . "${LIVE_BUILD}/scripts/build.sh" || . /usr/lib/live/build.sh

# Setting static variables
DESCRIPTION="$(Echo 'installs grub2 into binary [starting from syslinux]')"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffiles config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

if [ "${LB_BOOTLOADER}" != "syslinux" ]
then
	Echo_warning "il bootloader non e' syslinux, non posso creare un grub/live.cfg"
	Echo_warning "il bootloader e' '${LB_BOOTLOADER}'"
	exit 0
fi

Echo_message "Begin installing grub2...(from live)"

# Requiring stage file
Require_stagefile .build/config .build/bootstrap

# Checking stage file
Check_stagefile .build/binary_grub

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

# Check architecture
Check_architectures amd64 i386
Check_crossarchitectures

# Restoring cache
Restore_cache cache/packages.binary

# Installing depends
Install_package

# Local functions
Grub_live_entry ()
{
	#TODO: trova nel percorso
	if ! [ -f syslinux2grub.py ]; then
		Echo_warning "non trovo syslinux2grub.py in $PWD"
	fi
	./syslinux2grub.py binary/syslinux/live.cfg
	./syslinux2grub.py binary/syslinux/live.cfg binary/boot/grub/sys2grub.cfg
}

Grub_install_entry ()
{
	LABEL="${1}"
	KERNEL="${2}"
	INITRD="${3}"
	APPEND="${4}"

	if [ "${LABEL}" != "rescue" ] && [ "${LABEL}" != "rescuegui" ]
	then
		APPEND="${APPEND} quiet"
	fi

	LINUX_INSTALL="${LINUX_INSTALL}\nmenuentry \"Debian GNU/Linux - ${LABEL}\" {"
	LINUX_INSTALL="${LINUX_INSTALL}\nlinux\t\t/${KERNEL} ${APPEND} LB_BOOTAPPEND_INSTALL"
	LINUX_INSTALL="${LINUX_INSTALL}\ninitrd\t\t/${INITRD}"
	LINUX_INSTALL="${LINUX_INSTALL}\n}"
}

case "${LB_INITRAMFS}" in
	casper)
		INITFS="casper"
		;;

	live-boot)
		INITFS="live"
		;;

	*)
		INITFS=""
		;;
esac

# Setting destination directory
case "${LB_BINARY_IMAGES}" in
	iso*|tar)
		case "${LB_INITRAMFS}" in
			casper)
				DESTDIR_LIVE="binary/casper"
				;;

			live-boot)
				DESTDIR_LIVE="binary/live"
				;;

			*)
				DESTDIR_LIVE="binary/live"
				;;
		esac

		DESTDIR_INSTALL="binary/install"
		;;

	hdd*|netboot)
		Echo_warning "Bootloader in this image type not yet supported by live-build."
		Echo_warning "This would produce a not bootable image, aborting (FIXME)."
		Echo_warning "saltiamo l exit 1"
	;;
esac

Check_multiarchitectures

ls binary/syslinux/syslinux.cfg
if ! [ -f binary/syslinux/live.cfg ]; then
	Echo_warning "Error: live.cfg not found"
fi
mkdir -p binary/boot/grub
Grub_live_entry "live" "$(basename ${DESTDIR_LIVE})/${DEFAULT_KERNEL}" "$(basename ${DESTDIR_LIVE})/${DEFAULT_INITRD}"


Save_cache cache/packages.binary

# Removing depends
Remove_package

# Creating stage file
Create_stagefile .build/binary_grub
